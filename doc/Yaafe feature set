Yaafe feature set

Available features:
 - AmplitudeModulation
 - AutoCorrelation
 - ComplexDomainOnsetDetection
 - Energy
 - Envelope
 - EnvelopeShapeStatistics
 - Frames
 - LPC
 - Loudness
 - MFCC
 - MagnitudeSpectrum
 - MelSpectrum
 - OBSI
 - OBSIR
 - PerceptualSharpness
 - PerceptualSpread
 - SpectralCrestFactorPerBand
 - SpectralDecrease
 - SpectralFlatness
 - SpectralFlatnessPerBand
 - SpectralFlux
 - SpectralRolloff
 - SpectralShapeStatistics
 - SpectralSlope
 - SpectralVariation
 - TemporalShapeStatistics
 - ZCR
Available feature transforms:
 - AutoCorrelationPeaksIntegrator
 - Cepstrum
 - Derivate
 - HistogramIntegrator
 - SlopeIntegrator
 - StatisticalIntegrator
Available Output formats:
 - csv


Breakdown of pertinent features:

----------------------------------------------------------------------------

yaafe.py -d MFCC

    Compute the Mel-frequencies cepstrum coefficients [DM1980]_.
    
    Mel filter bank is built as 40 log-spaced filters according to the following mel-scale:
    
    .. math:: melfreq = 1127 * log(1 + \frac{freq}{700})
    
    Each filter is a triangular filter with height :math:`2/(f_{max}-f_{min})`.
    Then MFCCs are computed as following, using DCT II:
    
    .. math:: mfcc = dct(log(abs(fft(hanning(N).x)).MelFilterBank))
    
    .. [DM1980] S.B. Davis and P.Mermelstrin, *Comparison of parametric representations for monosyllabic word recognition in continuously spoken sentences.* IEEE Transactions on Acoustics, Speech and Signal Processing, 28 :357-366, 1980.

    
Parameters are :
- CepsIgnoreFirstCoeff (default=1): 0 keeps the first cepstral coeffcient, 1 ignore it
- CepsNbCoeffs (default=13): Number of cepstral coefficient to keep.
- FFTWindow (default=Hanning): Weighting window to apply before fft. Hanning|Hamming|None
- MelMaxFreq (default=6854.0): Maximum frequency of the mel filter bank
- MelMinFreq (default=130.0): Minimum frequency of the mel filter bank
- MelNbFilters (default=40): Number of mel filters
- blockSize (default=1024): output frames size
- stepSize (default=512): step between consecutive frames

----------------------------------------------------------------------------

yaafe.py -d OBSI

    Compute Octave band signal intensity using a trigular octave filter bank ([SE2005]_).
    
    .. [SE2005] S.Essid, *Classification automatique des signaux audio-frequences: reconnaissance des instruments de musique*. PhD, UPMC, 2005.
    
Parameters are :
- FFTLength (default=0): Frame's length on which perform FFT. Original frame is padded with zeros or truncated to reach this size. If 0 then use original frame length.
- FFTWindow (default=Hanning): Weighting window to apply before fft. Hanning|Hamming|None
- OBSIMinFreq (default=27.5): Minimum frequency for OBSI filter.
- blockSize (default=1024): output frames size
- stepSize (default=512): step between consecutive frames

----------------------------------------------------------------------------

yaafe.py -d Loudness

    The loudness coefficients are the energy in each Bark band, normalized by the overall sum. see [GP2004]_ and [MG1997]_ for more details.
    
    .. [MG1997] Moore, Glasberg, et al., *A Model for the Prediction of Thresholds Loudness and Partial Loudness.*, J. Audio Eng. Soc. 45: 224-240, 1997.
    
Parameters are :
- FFTLength (default=0): Frame's length on which perform FFT. Original frame is padded with zeros or truncated to reach this size. If 0 then use original frame length.
- FFTWindow (default=Hanning): Weighting window to apply before fft. Hanning|Hamming|None
- LMode (default=Relative): "Specific" computes loudness without normalization, "Relative" normalize each band so that they sum to 1, "Total" just returns the sum of Loudness in all bands.
- blockSize (default=1024): output frames size
- stepSize (default=512): step between consecutive frames

----------------------------------------------------------------------------



